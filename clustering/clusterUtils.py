import gensim
import pickle
from sklearn.cluster import KMeans
import numpy as np

"""
Make Clustering Objects
Takes the kmeans object generated by sklearn and the number of clusters
and uses this to generate a list of clusters formated to contain the number
of unique words in the cluster, the total frequency of those words in the
corpus, and a list of all words, with their associate frequencies
"""
def makeClusteringObjects(kmeans,num_clusters)
    clusters =[]
    for i in range(num_clusters):
        clusters.append( {'size':0,'freq':0,'list':[]})

    assignments = kmeans.predict(X)
    for i in range(len(vocab_list)):
        predicted = assignments[i]
        word      = vocab_list[i]
        freq      = model.wv.vocab[word].count
        clusters[predicted]['size'] += 1
        clusters[predicted]['freq'] += freq
        clusters[predicted]['list'].append((word,freq))
    return clusters

"""
Save and load utility files
Taken in part from:
https://stackoverflow.com/questions/19201290/how-to-save-a-dictionary-to-a-file
"""
def save_clustering(clustering, name ):
    with open('clusterings/'+ name + '.pkl', 'wb') as f:
        pickle.dump(clustering, f, pickle.HIGHEST_PROTOCOL)

def load_clustering(name ):
    with open('clusterings/' + name + '.pkl', 'rb') as f:
        return pickle.load(f)


  
    
